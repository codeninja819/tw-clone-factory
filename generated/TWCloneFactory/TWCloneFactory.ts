// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ProxyDeployed extends ethereum.Event {
  get params(): ProxyDeployed__Params {
    return new ProxyDeployed__Params(this);
  }
}

export class ProxyDeployed__Params {
  _event: ProxyDeployed;

  constructor(event: ProxyDeployed) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get deployer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TWCloneFactory extends ethereum.SmartContract {
  static bind(address: Address): TWCloneFactory {
    return new TWCloneFactory("TWCloneFactory", address);
  }

  deployProxyByImplementation(
    _implementation: Address,
    _data: Bytes,
    _salt: Bytes
  ): Address {
    let result = super.call(
      "deployProxyByImplementation",
      "deployProxyByImplementation(address,bytes,bytes32):(address)",
      [
        ethereum.Value.fromAddress(_implementation),
        ethereum.Value.fromBytes(_data),
        ethereum.Value.fromFixedBytes(_salt)
      ]
    );

    return result[0].toAddress();
  }

  try_deployProxyByImplementation(
    _implementation: Address,
    _data: Bytes,
    _salt: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployProxyByImplementation",
      "deployProxyByImplementation(address,bytes,bytes32):(address)",
      [
        ethereum.Value.fromAddress(_implementation),
        ethereum.Value.fromBytes(_data),
        ethereum.Value.fromFixedBytes(_salt)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  multicall(data: Array<Bytes>): Array<Bytes> {
    let result = super.call("multicall", "multicall(bytes[]):(bytes[])", [
      ethereum.Value.fromBytesArray(data)
    ]);

    return result[0].toBytesArray();
  }

  try_multicall(data: Array<Bytes>): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall("multicall", "multicall(bytes[]):(bytes[])", [
      ethereum.Value.fromBytesArray(data)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _trustedForwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeployProxyByImplementationCall extends ethereum.Call {
  get inputs(): DeployProxyByImplementationCall__Inputs {
    return new DeployProxyByImplementationCall__Inputs(this);
  }

  get outputs(): DeployProxyByImplementationCall__Outputs {
    return new DeployProxyByImplementationCall__Outputs(this);
  }
}

export class DeployProxyByImplementationCall__Inputs {
  _call: DeployProxyByImplementationCall;

  constructor(call: DeployProxyByImplementationCall) {
    this._call = call;
  }

  get _implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _salt(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DeployProxyByImplementationCall__Outputs {
  _call: DeployProxyByImplementationCall;

  constructor(call: DeployProxyByImplementationCall) {
    this._call = call;
  }

  get deployedProxy(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class MulticallCall extends ethereum.Call {
  get inputs(): MulticallCall__Inputs {
    return new MulticallCall__Inputs(this);
  }

  get outputs(): MulticallCall__Outputs {
    return new MulticallCall__Outputs(this);
  }
}

export class MulticallCall__Inputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class MulticallCall__Outputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}
